<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Jogo da Memória</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
    }
    .grid {
      display: grid;
      grid-template-columns: repeat(4, 100px);
      gap: 10px;
    }
    .card {
  width: 100px;
  height: 100px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #007bff;
  color: white;
  font-size: 24px;
  cursor: pointer;
  border-radius: 8px;
  user-select: none; /* Impede a seleção de texto ao clicar nas cartas */
}

.flipped, .matched {
  background-color: #4CAF50;
}

.matched {
  cursor: default;
}
button {
      margin: 20px;
      padding: 10px 20px;
      font-size: 16px;
    }
  </style>
</head>
<body>
  <div class="grid" id="grid"></div>
  <button id="restartButton">Recomeçar o Jogo</button>
  <script>
    const cardValues = ["A", "A", "B", "B", "C", "C", "D", "D", "E", "E", "F", "F", "G", "G", "H", "H"];

    const grid = document.getElementById("grid");
    const restartButton = document.getElementById("restartButton");

    let firstCard = null;
    let secondCard = null;
    let lockBoard = false; // Para evitar que o jogador clique durante a animação

    // Embaralha o array
    function shuffle(array) {
      return array.sort(() => Math.random() - 0.5);
    }

    // Cria o tabuleiro de jogo
    function createBoard() {
    grid.innerHTML = ""; // Limpa o grid
   const shuffledCards = shuffle([...cardValues]); // Embaralha os valores das cartas

    shuffledCards.forEach(value => {
    const card = document.createElement("div");
    card.classList.add("card");
    card.dataset.value = value;
    card.addEventListener("click", flipCard);
    grid.appendChild(card);
  });

  resetGame(); // Reseta as variáveis do jogo
}

  function createBoard() {
  grid.innerHTML = ""; // Limpa a grid
  const shuffledCards = shuffle([...cardValues]); // Embaralha os valores das cartas
  shuffledCards.forEach(value => {
    const card = document.createElement("div");
    card.classList.add("card");
    card.dataset.value = value;
    card.addEventListener("click", flipCard);
    grid.appendChild(card);
  });
  resetGame(); // Reseta as variáveis do jogo
}
// Função para virar a carta
function flipCard() {
  if (lockBoard || this.classList.contains("flipped") || this.classList.contains("matched")) return;
  this.textContent = this.dataset.value; // Show the card value
  this.classList.add("flipped");
}
if (!firstCard) {
  firstCard = this; // Armazena a primeira carta
} else {
  secondCard = this; // Armazena a segunda carta
  checkMatch(); // Verifica se as cartas combinam
}

// Função para verificar se as cartas combinam
function checkMatch() {
  lockBoard = true; // Bloqueia o tabuleiro

  if (firstCard.dataset.value === secondCard.dataset.value) {
    firstCard.classList.add("matched");
    secondCard.classList.add("matched");
    resetCards();
  } else {
    // Adiciona o tempo para desvirar as cartas se não forem iguais
  }
} setTimeout(() => {
  firstCard.textContent = ""; // Esconde o valor da primeira carta
  secondCard.textContent = ""; // Esconde o valor da segunda carta
  firstCard.classList.remove("flipped"); // Remove a classe de virada da primeira carta
  secondCard.classList.remove("flipped"); // Remove a classe de virada da segunda carta
  resetCards(); // Reseta as cartas
}, 1000);

// Reseta as cartas e o estado do jogo
function resetCards() {
  firstCard = null; // Reseta a primeira carta
  secondCard = null; // Reseta a segunda carta
  lockBoard = false; // Libera o tabuleiro
}

// Reseta o jogo
function resetGame() {
  firstCard = null; // Reseta a primeira carta
  secondCard = null; // Reseta a segunda carta
  lockBoard = false; // Libera o tabuleiro
}
setTimeout(() => {
  firstCard.textContent = ""; // Esconde o valor da primeira carta
  secondCard.textContent = ""; // Esconde o valor da segunda carta
  firstCard.classList.remove("flipped"); // Remove a classe de virada da primeira carta
  secondCard.classList.remove("flipped"); // Remove a classe de virada da segunda carta
  resetCards(); // Reseta as cartas
}, 1000);

// Reseta as cartas e o estado do jogo
function resetCards() {
  firstCard = null; // Reseta a primeira carta
  secondCard = null; // Reseta a segunda carta
  lockBoard = false; // Libera o tabuleiro
}

// Reinicia o jogo
restartButton.addEventListener("click", createBoard);

// Inicializa o jogo
createBoard();
</script>
</body>
</html>